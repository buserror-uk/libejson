
#CC			= gcc
SHELL			= /bin/bash

INSTALL			?= install
OBJ				:= obj-$(shell $(CC) -dumpmachine)
DESTDIR			?= /usr/local
SOV				= 1
VERSION			= 0.90
PKG				= 1

EXTRA_CFLAGS	+= -g -O2 -fPIC --std=gnu99

TARGET			= libejson
DESC			= JSON and EJSON C parser library

all				:	$(OBJ) $(OBJ)/$(TARGET).a \
	$(OBJ) $(OBJ)/$(TARGET).so.$(SOV) \
	$(OBJ)/ejson_test.bin

$(OBJ):
	mkdir -p $(OBJ)
	
$(OBJ)/ejson_test.bin	:	$(OBJ)/ejson_test.o $(OBJ)/$(TARGET).a
$(OBJ)/$(TARGET).a		:	$(OBJ)/ejson.o
$(OBJ)/$(TARGET).so.$(SOV):	$(OBJ)/ejson.o

ejson.c	: 	ejson.rl ejson.h
	ragel -G1 -e $<

clean			:
	rm -rf obj-* *.dSYM

install			:
	mkdir -p $(DESTDIR)/lib/ $(DESTDIR)/include/
	$(INSTALL) -m 644 $(OBJ)/$(TARGET).a $(DESTDIR)/lib/
	$(INSTALL) -m 644 ejson.h $(DESTDIR)/include/
	$(INSTALL) -s -m 644 $(OBJ)/$(TARGET).so.$(SOV) $(DESTDIR)/lib/
	ln -sf $(TARGET).so.$(SOV) $(DESTDIR)/lib/$(TARGET).so
ifeq (,$(filter rpm,$(ROLE)))
	mkdir -p $(DESTDIR)/lib/pkgconfig 
	$(INSTALL) -m 644 ejson.pc $(DESTDIR)/lib/pkgconfig/
endif

deb 			:
	rm -rf /tmp/deb
	make clean && make all && make install DESTDIR=/tmp/deb/usr
	mkdir -p ../debian; (cd ../debian; \
	fpm -s dir -t deb -C /tmp/deb -n $(TARGET) -v $(VERSION) --iteration $(PKG) \
		--description "$(DESC)" \
		usr/lib/{$(TARGET).so.$(SOV),$(TARGET).so} && \
	fpm -s dir -t deb -C /tmp/deb -n $(TARGET)-dev -v $(VERSION) --iteration $(PKG) \
		--description "$(DESC) - development files" \
		-d "$(TARGET) (= $(VERSION))" \
		usr/lib/$(TARGET).a \
		usr/lib/pkgconfig \
		usr/include ; \
	)

tarball			:
	make clean
	rm -rf /tmp/$(TARGET)-$(VERSION)
	mkdir /tmp/$(TARGET)-$(VERSION)
	rsync -a ./ /tmp/$(TARGET)-$(VERSION)/ --exclude=.git\* --exclude=\*.deb 
	( cd /tmp ; tar jcf  $(TARGET)-$(VERSION).tar.bz2 $(TARGET)-$(VERSION) ) 
	 
# Include autogenerated dependencies
-include ${OBJ}/*.d 

$(OBJ)/%.so.$(SOV) :
ifeq ($(V),1)
	{ ${CC} -shared -Wl,-soname,${shell basename $@} -o $@ $^ ${BASE_LDFLAGS} ${LDFLAGS} && \
		ln -sf ${shell basename $@} ${@:.${SOV}=} ; }
else
	@echo "  LDSO  ${shell basename $@}"
	@{ ${CC} -shared -Wl,-soname,${shell basename $@} -o $@ $^ ${BASE_LDFLAGS} ${LDFLAGS} && \
		ln -sf ${shell basename $@} ${@:.$(SOV)=} ; } \
		|| echo Error: ${CC} -shared -Wl,-soname,${shell basename $@} -o $@ $^ ${BASE_LDFLAGS} ${LDFLAGS}
endif

$(OBJ)/%.a :
ifeq ($(V),1)
	$(AR) cru $@ $^
	ranlib $@
else
	@echo "  LIB   ${@}" 
	@$(AR) cru $@ $^ \
		|| echo Error: $(AR) cru $@ $^
endif
	
${OBJ}/%.o: %.c
ifeq ($(V),1)
	${CC} -MD ${EXTRA_CFLAGS} ${CPPFLAGS} ${CFLAGS} -c -o ${@} ${<}
else
	@echo "  CC    ${<}"
	@${CC} -MD ${EXTRA_CFLAGS} ${CPPFLAGS} ${CFLAGS} -c -o ${@} ${<} \
		|| echo Error: ${CC} -MD ${EXTRA_CFLAGS} ${CPPFLAGS} ${CFLAGS} -c -o ${@} ${<}
endif

${OBJ}/%.bin:
ifeq ($(V),1)
	${CC} -o ${@} ${^} ${EXTRA_LDFLAGS} ${LDFLAGS} 
else
	@echo "  LD    ${*}"
	@${CC} -o ${@} ${^} ${LDFLAGS} ${EXTRA_LDFLAGS} \
		|| echo Error: ${CC} -o ${@} ${^} ${LDFLAGS} ${EXTRA_LDFLAGS}
endif
